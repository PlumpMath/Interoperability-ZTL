package Model;

import java.text.SimpleDateFormat;
import java.util.Vector;

public class Pass implements SibSerializable {

	private long deadline;
	private long ticket;
	private long type;
	private String plate;

	public Pass() {
		super();
	}

	public Pass(long deadline, long ticket, long type, String plate) {
		super();
		this.deadline = deadline;
		this.ticket = ticket;
		this.type = type;
		this.plate = plate;
	}

	@Override
	public String toString() {
		SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd HH:mm");
		return "Pass [deadline=" + sdfDate.format(deadline) + ", ticket=" + ticket + ", type=" + type + ", plate="
				+ plate + "]";
	}

	public long getDeadline() {
		return deadline;
	}

	public void setDeadline(long deadline) {
		this.deadline = deadline;
	}

	public long getTicket() {
		return ticket;
	}

	public void setTicket(long ticket) {
		this.ticket = ticket;
	}

	public long getType() {
		return type;
	}

	public void setType(long type) {
		this.type = type;
	}

	public String getPlate() {
		return plate;
	}

	public void setPlate(String plate) {
		this.plate = plate;
	}

	public Vector<String> toTriple() {
		// TODO serialization method -> RICORDA CHE RICORSIVAMENTE DEVE INVOCARE
		// LA toTriple() dei campi non literal
		throw new IllegalArgumentException("not implemented yet");
	}
}
